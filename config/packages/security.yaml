security:
    #https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        my_provider:
            entity:
                class: App\Entity\User
                property: username
            #in_memory:
            #    memory:
            #        users:
            #            ryan:
            #                password: $2a$12$LCY0MefVIEc3TYPHV9SNnuzOfyr2p/AXIGoQJEDs4am4JwhNz/jli
            #                roles: 'ROLE_USER'
            #            admin:
            #                password: $2a$12$cyTWeE9kpq1PjqKFiWUZFuCRPwVyAZwm4XzMZ1qPUFl7/flCM3V0G
            #                roles: 'ROLE_ADMIN'
    encoders:
            #Symfony\Component\Security\Core\User\User:
            #    algorithm: bcrypt
            #    cost: 12
            App\Entity\User:
                 algorithm: bcrypt
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            #anonymous: ~
            form_login:
                login_path: login
                check_path: login
                provider: my_provider
                default_target_path: /

            logout:
                path: /logout
                target: /

            # activate different ways to authenticate

            http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *fi  rst* access control that matches will be used
    access_control:
        - { path: ^/questions, roles:  [ROLE_ADMIN, ROLE_USER]  }
        - { path: ^/edit, roles:  [ROLE_ADMIN, ROLE_USER]  }
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/delete, roles:  ROLE_ADMIN  }
        - { path: ^/download, roles:  ROLE_ADMIN  }
